[{"/Users/nogaken/work/gate-keeper-cms/frontend/src/reportWebVitals.ts":"1","/Users/nogaken/work/gate-keeper-cms/frontend/src/index.tsx":"2","/Users/nogaken/work/gate-keeper-cms/frontend/src/RoomCalendar/RoomCalendar.tsx":"3","/Users/nogaken/work/gate-keeper-cms/frontend/src/RoomDetail/RoomDetail.tsx":"4","/Users/nogaken/work/gate-keeper-cms/frontend/src/Nav/Nav.tsx":"5","/Users/nogaken/work/gate-keeper-cms/frontend/src/User.tsx":"6","/Users/nogaken/work/gate-keeper-cms/frontend/src/Auth.tsx":"7","/Users/nogaken/work/gate-keeper-cms/frontend/src/Login.tsx":"8","/Users/nogaken/work/gate-keeper-cms/frontend/src/Key/Key.tsx":"9","/Users/nogaken/work/gate-keeper-cms/frontend/src/MyReservation/MyReservation.tsx":"10","/Users/nogaken/work/gate-keeper-cms/frontend/src/api.tsx":"11","/Users/nogaken/work/gate-keeper-cms/frontend/src/AdminRoomCalendar/AdminRoomCalendar.tsx":"12","/Users/nogaken/work/gate-keeper-cms/frontend/src/util.tsx":"13","/Users/nogaken/work/gate-keeper-cms/frontend/src/MyPage/MyPage.tsx":"14","/Users/nogaken/work/gate-keeper-cms/frontend/src/UserList/UserList.tsx":"15"},{"size":425,"mtime":1606135004921,"results":"16","hashOfConfig":"17"},{"size":1738,"mtime":1617504835487,"results":"18","hashOfConfig":"17"},{"size":3427,"mtime":1617503805655,"results":"19","hashOfConfig":"17"},{"size":3887,"mtime":1612745993139,"results":"20","hashOfConfig":"17"},{"size":990,"mtime":1617504887216,"results":"21","hashOfConfig":"17"},{"size":892,"mtime":1614401149979,"results":"22","hashOfConfig":"17"},{"size":369,"mtime":1606659426437,"results":"23","hashOfConfig":"17"},{"size":2009,"mtime":1614401016677,"results":"24","hashOfConfig":"17"},{"size":2531,"mtime":1614392712621,"results":"25","hashOfConfig":"17"},{"size":2587,"mtime":1618727765820,"results":"26","hashOfConfig":"17"},{"size":9587,"mtime":1618727146749,"results":"27","hashOfConfig":"17"},{"size":3252,"mtime":1618723445685,"results":"28","hashOfConfig":"17"},{"size":1796,"mtime":1614398301737,"results":"29","hashOfConfig":"17"},{"size":3598,"mtime":1618727669978,"results":"30","hashOfConfig":"17"},{"size":4061,"mtime":1618727100576,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"97ge4x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"/Users/nogaken/work/gate-keeper-cms/frontend/src/reportWebVitals.ts",[],["72","73"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/index.tsx",["74","75","76"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport RoomCalendar from \"./RoomCalendar/RoomCalendar\";\nimport AdminRoomCalendar from \"./AdminRoomCalendar/AdminRoomCalendar\";\nimport RoomDetail from \"./RoomDetail/RoomDetail\";\nimport Key from \"./Key/Key\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, Link, Route, Router } from \"react-router-dom\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Navigation from \"./Nav/Nav\";\n\n// Importing the Bootstrap CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Switch from \"react-bootstrap/esm/Switch\";\nimport Login from \"./Login\";\nimport Auth from \"./Auth\";\nimport MyReservation from \"./MyReservation/MyReservation\";\nimport MyPage from \"./MyPage/MyPage\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Container>\n      <BrowserRouter>\n        <Navigation></Navigation>\n        <Auth>\n          <Switch>\n            <Route exact path=\"/\" component={RoomCalendar} />\n            <Route exact path=\"/my/reservation\" component={MyReservation} />\n            <Route exact path=\"/my/page\" component={MyPage} />\n            <Route exact path=\"/my/key\" component={Key} />\n            <Route path=\"/detail/:dateString\" component={RoomDetail} />\n            <Route path=\"/admin\" component={AdminRoomCalendar} />\n          </Switch>\n        </Auth>\n        <Route path=\"/login\" component={Login} />\n      </BrowserRouter>\n    </Container>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["77","78"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/RoomCalendar/RoomCalendar.tsx",["79","80","81","82","83","84","85","86"],"import React, { useEffect, useState } from \"react\";\nimport \"./RoomCalendar.css\";\nimport Calendar, {\n  CalendarTileProperties,\n  DateCallback,\n  MonthView,\n} from \"react-calendar\";\nimport * as H from \"history\";\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\nimport * as util from \"../util\";\nimport {\n  CalendarResponse,\n  TimeRange,\n  GetMonthCalendar,\n  UserReservationCountResponse,\n  GetUserReservationCount,\n} from \"../api\";\nimport { FaBed, FaQuestion } from \"react-icons/fa\";\nimport { WiDaySunny, WiSunset, WiMoonWaxingCrescent4 } from \"react-icons/wi\";\nimport { MdDoNotDisturbAlt } from \"react-icons/md\";\nimport { JsxExpression } from \"typescript\";\nimport { Col, Row } from \"react-bootstrap\";\n\ninterface User {\n  sessionToken: string;\n}\n\nfunction RoomCalendar() {\n  let [user, setUser] = useState({ sessionToken: \"test\" });\n  let [calendar, setReserved] = useState({ playground_id: 0, reserved: {} });\n  let [\n    userReservationCount,\n    setUserReservationCount,\n  ] = useState<UserReservationCountResponse>({\n    all_count: 0,\n    simul_count: 0,\n    all_limit: 0,\n    simul_limit: 0,\n  });\n\n  useEffect(() => {\n    GetMonthCalendar(setReserved);\n    GetUserReservationCount(setUserReservationCount);\n  }, []);\n  let history = useHistory();\n  return (\n    <div>\n      <Row>\n        <Col xs=\"12\" className=\"text-center\">\n          今月の合計予約数: {userReservationCount.all_count} /{\" \"}\n          {userReservationCount.all_limit}\n        </Col>\n        <Col xs=\"12\" className=\"text-center\">\n          今月の同時予約数: {userReservationCount.simul_count} /{\" \"}\n          {userReservationCount.simul_limit}\n        </Col>\n      </Row>\n      <Calendar\n        tileContent={(props: CalendarTileProperties) =>\n          tileContent(props, calendar)\n        }\n        onClickDay={(date: Date) => onClickDay(date, history)}\n        activeStartDate={new Date()}\n        showNeighboringMonth={false}\n        tileDisabled={tileDisabled}\n        prevLabel=\"\"\n        prev2Label=\"\"\n        nextLabel=\"\"\n        next2Label=\"\"\n      />\n    </div>\n  );\n}\n\nfunction onClickDay(date: Date, history: H.History) {\n  console.log(util.dateString(date));\n  history.push(`/detail/${util.dateString(date)}`);\n}\n\nfunction tileContent(\n  props: CalendarTileProperties,\n  reserved: CalendarResponse\n): JSX.Element {\n  return (\n    <div>\n      {getStatusIcon(\"DAY\", isReserved(props.date, \"DAY\", reserved))}\n      {getStatusIcon(\"EVENING\", isReserved(props.date, \"EVENING\", reserved))}\n      <br></br>\n      {getStatusIcon(\"NIGHT\", isReserved(props.date, \"NIGHT\", reserved))}\n    </div>\n  );\n}\n\nconst iconMap = {\n  DAY: <WiDaySunny></WiDaySunny>,\n  EVENING: <WiMoonWaxingCrescent4></WiMoonWaxingCrescent4>,\n  NIGHT: <FaBed></FaBed>,\n  OTHER: <FaQuestion></FaQuestion>,\n};\n\nfunction getStatusIcon(timeRange: TimeRange, isReserved: boolean): JSX.Element {\n  if (isReserved) {\n    return <MdDoNotDisturbAlt></MdDoNotDisturbAlt>;\n  }\n  return iconMap[timeRange];\n}\n\nfunction isReserved(\n  date: Date,\n  timeRange: TimeRange,\n  reserved: CalendarResponse\n): boolean {\n  return (\n    util.dateString(date) in reserved.reserved &&\n    timeRange in reserved.reserved[util.dateString(date)]\n  );\n}\n\nfunction tileDisabled(\n  props: CalendarTileProperties & { activeStartDate: Date }\n): boolean {\n  if (props.date.getDate() < new Date().getDate()) {\n    return true;\n  }\n  return false;\n}\n\nexport default RoomCalendar;\n","/Users/nogaken/work/gate-keeper-cms/frontend/src/RoomDetail/RoomDetail.tsx",["87","88","89","90","91","92"],"import React, { useEffect, useState } from \"react\";\nimport \"./RoomDetail.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { RouteComponentProps, useParams } from \"react-router-dom\";\nimport { Button, Form } from \"react-bootstrap\";\nimport {\n  TimeRange,\n  GetDateCaledar,\n  DateReservedInfo,\n  PostReserve,\n  SuccessResponse,\n} from \"../api\";\n\ntype DetailParam = {\n  dateString: string;\n};\n\ntype TimeSlotId = TimeRange;\ntype TimeSlotInfo = {\n  name: string;\n};\ntype TimeSlotInfos = Map<TimeSlotId, TimeSlotInfo>;\n\nconst TIME_SLOTS: TimeSlotInfos = new Map([\n  [\"DAY\", { name: \"12:00 - 17:00\" }],\n  [\"EVENING\", { name: \"18:00 - 23:00\" }],\n  [\"NIGHT\", { name: \"24:00 - 10:00\" }],\n]);\n\nfunction pickEmpty(reservedInfo: DateReservedInfo): TimeSlotId | null {\n  for (let key of Array.from(TIME_SLOTS.keys())) {\n    if (reservedInfo.get(key as TimeSlotId) == undefined)\n      return key as TimeSlotId;\n  }\n  return null;\n}\n\nfunction RoomDetail(props: RouteComponentProps<DetailParam>) {\n  let [selectedTimeSlot, setTimeSlot] = useState<TimeSlotId>(\"DAY\");\n  let [dateString, setDateString] = useState<string>(\n    props.match.params.dateString\n  );\n  let [timeSlotInfos, setTimeSlotInfos] = useState<TimeSlotInfos>(TIME_SLOTS);\n  let [reservedInfo, setReservedInfo] = useState<DateReservedInfo>(new Map());\n\n  useEffect(() => {\n    GetDateCaledar(new Date(dateString), setReservedInfo);\n  }, [dateString]);\n\n  useEffect(() => {\n    let emptySlot = pickEmpty(reservedInfo);\n    if (emptySlot) {\n      setTimeSlot(emptySlot);\n    }\n  }, [reservedInfo]);\n\n  return (\n    <div className=\"roomDetail\">\n      <p>ABCマンション中目黒の詳細</p>\n      <h3>{dateString}</h3>\n\n      <div\n        onChange={(e) => handleChange(e, setTimeSlot)}\n        className=\"radioButtons text-center\"\n      >\n        {Array.from(timeSlotInfos.keys()).map((timeSlotId) => {\n          return returnRadioButton(\n            timeSlotId,\n            timeSlotInfos,\n            reservedInfo,\n            selectedTimeSlot\n          );\n        })}\n      </div>\n      <div className=\"text-center\">\n        <Button\n          variant=\"primary\"\n          onClick={(e) => handleSubmit(props, selectedTimeSlot, dateString)}\n          size=\"lg\"\n        >\n          予約する\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction handleSubmit(\n  props: RouteComponentProps,\n  selectedTimeSlot: TimeSlotId,\n  dateString: string\n) {\n  console.log(\"submit!\");\n  console.log(selectedTimeSlot);\n  console.log(dateString);\n  PostReserve(dateString, selectedTimeSlot).then(\n    (response: SuccessResponse | null) => {\n      if (response == null) {\n        window.alert(\"予約が失敗しました。\");\n      } else {\n        window.alert(\"予約が完了しました。\");\n        props.history.push(\"/my/reservation\");\n      }\n    }\n  );\n}\n\nfunction handleChange(\n  e: any,\n  setTimeSlot: (timeSlot: TimeSlotId) => void\n): void {\n  setTimeSlot(e.target.value);\n}\n\nfunction returnRadioButton(\n  timeSlotId: TimeSlotId,\n  timeSlotInfos: TimeSlotInfos,\n  reservedInfo: DateReservedInfo,\n  selectedTimeSlot: TimeSlotId\n): JSX.Element {\n  return (\n    <Form.Check\n      type=\"radio\"\n      name={timeSlotInfos.get(timeSlotId)?.name}\n      className=\"radioButton custom-control custom-radio\"\n      id={timeSlotId}\n    >\n      <Form.Check.Input\n        type=\"radio\"\n        checked={selectedTimeSlot == timeSlotId}\n        value={timeSlotId}\n        disabled={reservedInfo.get(timeSlotId) != undefined}\n        // className=\"custom-control-input\"\n      ></Form.Check.Input>\n      <Form.Check.Label\n      // className=\"custom-control-label\"\n      >\n        {timeSlotInfos.get(timeSlotId)?.name}\n      </Form.Check.Label>\n    </Form.Check>\n  );\n}\n\n// function isAble(reservedInfo: DateReservedInfo, timeSlotId: TimeSlotId) {\n//   if (reservedInfo.get(timeSlotId) == undefined)) return false\n// }\n\nexport default RoomDetail;\n",["93","94"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/Nav/Nav.tsx",["95","96","97","98","99"],"import { Form, Nav, Navbar } from \"react-bootstrap\";\nimport React from \"react\";\nimport \"./Nav.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as H from \"history\";\nimport User from \"../User\";\n\nfunction Navigation() {\n  return (\n    <Navbar expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <img src=\"/venture_growth_icon.png\" width=\"60px\"></img>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">ホーム</Nav.Link>\n          <Nav.Link href=\"/my/reservation\">予約一覧</Nav.Link>\n          <Nav.Link href=\"/my/page\">マイページ</Nav.Link>\n          {User.isLoggedIn() && (\n            <Nav.Link onClick={User.logout}>ログアウト</Nav.Link>\n          )}\n          {User.isAdmin() && <Nav.Link href=\"/admin\">管理画面</Nav.Link>}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","/Users/nogaken/work/gate-keeper-cms/frontend/src/User.tsx",[],"/Users/nogaken/work/gate-keeper-cms/frontend/src/Auth.tsx",["100","101","102"],"import React, { FC, ReactNode } from 'react';\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\nimport User from './User';\n\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst Auth: React.FC<Props> = (props: Props) => {\n  if (User.isLoggedIn()) {\n    return <div>{props.children}</div>;\n  }\n  return <Redirect to={'/login'} />;\n}\n\n\nexport default Auth;","/Users/nogaken/work/gate-keeper-cms/frontend/src/Login.tsx",["103","104","105"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/Key/Key.tsx",["106","107","108"],"import { RouteComponentProps } from \"react-router-dom\";\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Key.css\";\nimport { Card, Col, Row, ToggleButton } from \"react-bootstrap\";\nimport { Button, FormControlLabel, Switch } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport { GetActiveReservation, Reservation, ToggleGateway } from \"../api\";\n\nfunction Key(props: RouteComponentProps) {\n  let [doorOpened, setDoorOpened] = useState<boolean>(false);\n  let [reservation, setReservation] = useState<Reservation | null>(null);\n\n  useEffect(() => {\n    GetActiveReservation(setReservation).catch((error) => {\n      console.error(error);\n      window.alert(\"現在有効な予約がありません。\");\n      props.history.push(\"/my/reservation\");\n    });\n  }, []);\n\n  return (\n    <div className=\"myKey\">\n      {reservation && (\n        <div>\n          <h2 className=\"text-center\">目黒マンション</h2>\n          <Row className=\"justify-content-center my-3\">\n            <Col xs=\"11\">\n              <Card>\n                <Card.Body>\n                  <Card.Title>エントランス</Card.Title>\n                  <Button variant=\"contained\" color=\"primary\" fullWidth>\n                    解錠\n                  </Button>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row className=\"justify-content-center my-3\">\n            <Col xs=\"11\">\n              <Card>\n                <Card.Body>\n                  <Card.Title>玄関</Card.Title>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        size=\"medium\"\n                        checked={doorOpened}\n                        onChange={(e) =>\n                          toggleDoor(reservation!!, doorOpened, setDoorOpened)\n                        }\n                      ></Switch>\n                    }\n                    label={doorOpened.toString()}\n                  ></FormControlLabel>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction toggleDoor(\n  reservation: Reservation,\n  opened: boolean,\n  setDoorOpened: (doorOpened: boolean) => void\n) {\n  const token: string | undefined = reservation.gateway_sessions.get(\"DOOR\")\n    ?.token;\n  if (token == null) {\n    console.error(\"There is no door key.\");\n    return;\n  } else {\n    ToggleGateway(token, opened ? \"lock\" : \"unlock\", setDoorOpened);\n  }\n}\n\nexport default Key;\n","/Users/nogaken/work/gate-keeper-cms/frontend/src/MyReservation/MyReservation.tsx",["109","110","111","112","113","114","115","116","117","118"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/api.tsx",["119","120"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/AdminRoomCalendar/AdminRoomCalendar.tsx",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/util.tsx",[],"/Users/nogaken/work/gate-keeper-cms/frontend/src/MyPage/MyPage.tsx",["136","137","138","139","140"],"/Users/nogaken/work/gate-keeper-cms/frontend/src/UserList/UserList.tsx",["141","142","143"],"import React, { useEffect, useState } from \"react\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { Button, Card, Container, Form, Image, Row } from \"react-bootstrap\";\nimport {\n  UserInfo,\n  GetUsers,\n  Plan,\n  GetPlans,\n  UpdatePlan,\n  CreateUser,\n} from \"../api\";\nimport { Col } from \"react-bootstrap\";\nimport * as util from \"../util\";\n\nconst handlePlanChange = (userId: number, planId: number) => {\n  UpdatePlan(userId, planId);\n};\n\nconst handleUserCreate = (name: string, email: string, planId: number) => {\n  CreateUser(name, email, planId);\n};\n\nfunction UserList() {\n  let [users, setUsers] = useState<Array<UserInfo>>([]);\n  let [plans, setPlans] = useState<Array<Plan>>([]);\n\n  useEffect(() => {\n    GetUsers(setUsers);\n    GetPlans(setPlans);\n  }, []);\n\n  return (\n    <Container className=\"p-3\">\n      <CreateUserView plans={plans}></CreateUserView>\n      <h2 className=\"text-center\">ユーザ一覧</h2>\n      <div>{users.map((user) => User(user, plans))}</div>\n    </Container>\n  );\n}\n\ninterface CreateUserViewProps {\n  plans: Array<Plan>;\n}\nconst CreateUserView: React.FC<CreateUserViewProps> = ({ plans }) => {\n  let [name, setName] = useState<string>(\"\");\n  let [planId, setPlanId] = useState<number>(1);\n  let [email, setEmail] = useState<string>(\"\");\n\n  return (\n    <div>\n      <h2 className=\"text-center\">新規ユーザ作成</h2>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>お名前</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter email\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>メールアドレス</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <PlanSelector\n            plans={plans}\n            initPlanId={1}\n            setPlanId={setPlanId}\n          ></PlanSelector>\n        </Form.Group>\n\n        <Row className=\"justify-content-center mt-5\">\n          <Col xs=\"4\" md=\"2\" className=\"text-center\">\n            <Button\n              variant=\"primary\"\n              onClick={() => handleUserCreate(name, email, planId)}\n            >\n              ユーザを作成する\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </div>\n  );\n};\n\nfunction User(user: UserInfo, plans: Array<Plan>) {\n  var planId: number = user.plan.id;\n  return (\n    <div className=\"mt-3\">\n      <Card>\n        <Card.Header>\n          {user.name} ({user.id})\n        </Card.Header>\n        <Card.Body>\n          <Card.Title>{user.email}</Card.Title>\n          <Form>\n            <PlanSelector\n              plans={plans}\n              initPlanId={user.plan.id}\n              setPlanId={(newPlanId: number) => {\n                planId = newPlanId;\n              }}\n            ></PlanSelector>\n          </Form>\n\n          <Button\n            variant=\"primary\"\n            onClick={() => {\n              handlePlanChange(user.id, planId);\n            }}\n          >\n            プランを更新\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\ninterface PlanSelectorProps {\n  plans: Array<Plan>;\n  initPlanId: number;\n  setPlanId: (planId: number) => void;\n}\n\nconst PlanSelector: React.FC<PlanSelectorProps> = ({\n  plans,\n  initPlanId,\n  setPlanId,\n}) => {\n  var planId = initPlanId;\n  return (\n    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n      <Form.Label>プラン</Form.Label>\n      <Form.Control\n        as=\"select\"\n        onChange={(e) => {\n          planId = Number(e.target.value);\n          setPlanId(planId);\n        }}\n      >\n        {plans.map((plan: Plan) => {\n          return (\n            <option value={plan.id} selected={planId == plan.id}>\n              {plan.name}\n            </option>\n          );\n        })}\n      </Form.Control>\n    </Form.Group>\n  );\n};\n\nexport default UserList;\n",{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":9,"column":25,"nodeType":"150","messageId":"151","endLine":9,"endColumn":29},{"ruleId":"148","severity":1,"message":"152","line":9,"column":38,"nodeType":"150","messageId":"151","endLine":9,"endColumn":44},{"ruleId":"148","severity":1,"message":"153","line":10,"column":21,"nodeType":"150","messageId":"151","endLine":10,"endColumn":24},{"ruleId":"144","replacedBy":"154"},{"ruleId":"146","replacedBy":"155"},{"ruleId":"148","severity":1,"message":"156","line":5,"column":3,"nodeType":"150","messageId":"151","endLine":5,"endColumn":15},{"ruleId":"148","severity":1,"message":"157","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":12},{"ruleId":"148","severity":1,"message":"158","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":29},{"ruleId":"148","severity":1,"message":"159","line":19,"column":22,"nodeType":"150","messageId":"151","endLine":19,"endColumn":30},{"ruleId":"148","severity":1,"message":"160","line":21,"column":10,"nodeType":"150","messageId":"151","endLine":21,"endColumn":23},{"ruleId":"148","severity":1,"message":"161","line":24,"column":11,"nodeType":"150","messageId":"151","endLine":24,"endColumn":15},{"ruleId":"148","severity":1,"message":"162","line":29,"column":8,"nodeType":"150","messageId":"151","endLine":29,"endColumn":12},{"ruleId":"148","severity":1,"message":"163","line":29,"column":14,"nodeType":"150","messageId":"151","endLine":29,"endColumn":21},{"ruleId":"148","severity":1,"message":"164","line":4,"column":31,"nodeType":"150","messageId":"151","endLine":4,"endColumn":40},{"ruleId":"165","severity":1,"message":"166","line":32,"column":45,"nodeType":"167","messageId":"168","endLine":32,"endColumn":47},{"ruleId":"148","severity":1,"message":"169","line":40,"column":20,"nodeType":"150","messageId":"151","endLine":40,"endColumn":33},{"ruleId":"148","severity":1,"message":"170","line":43,"column":23,"nodeType":"150","messageId":"151","endLine":43,"endColumn":39},{"ruleId":"165","severity":1,"message":"166","line":130,"column":35,"nodeType":"167","messageId":"168","endLine":130,"endColumn":37},{"ruleId":"165","severity":1,"message":"171","line":132,"column":48,"nodeType":"167","messageId":"168","endLine":132,"endColumn":50},{"ruleId":"144","replacedBy":"172"},{"ruleId":"146","replacedBy":"173"},{"ruleId":"148","severity":1,"message":"174","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"175","line":4,"column":16,"nodeType":"150","messageId":"151","endLine":4,"endColumn":26},{"ruleId":"148","severity":1,"message":"176","line":5,"column":13,"nodeType":"150","messageId":"151","endLine":5,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":12,"column":9,"nodeType":"179","endLine":12,"endColumn":58},{"ruleId":"148","severity":1,"message":"180","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},{"ruleId":"148","severity":1,"message":"181","line":1,"column":21,"nodeType":"150","messageId":"151","endLine":1,"endColumn":30},{"ruleId":"148","severity":1,"message":"158","line":2,"column":20,"nodeType":"150","messageId":"151","endLine":2,"endColumn":39},{"ruleId":"148","severity":1,"message":"180","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":19},{"ruleId":"148","severity":1,"message":"181","line":1,"column":21,"nodeType":"150","messageId":"151","endLine":1,"endColumn":30},{"ruleId":"148","severity":1,"message":"182","line":7,"column":6,"nodeType":"150","messageId":"151","endLine":7,"endColumn":11},{"ruleId":"148","severity":1,"message":"183","line":5,"column":26,"nodeType":"150","messageId":"151","endLine":5,"endColumn":38},{"ruleId":"148","severity":1,"message":"184","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":20},{"ruleId":"185","severity":1,"message":"186","line":20,"column":6,"nodeType":"187","endLine":20,"endColumn":8,"suggestions":"188"},{"ruleId":"148","severity":1,"message":"164","line":4,"column":31,"nodeType":"150","messageId":"151","endLine":4,"endColumn":40},{"ruleId":"148","severity":1,"message":"189","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":16},{"ruleId":"148","severity":1,"message":"174","line":5,"column":24,"nodeType":"150","messageId":"151","endLine":5,"endColumn":28},{"ruleId":"148","severity":1,"message":"190","line":5,"column":30,"nodeType":"150","messageId":"151","endLine":5,"endColumn":35},{"ruleId":"148","severity":1,"message":"191","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":12},{"ruleId":"148","severity":1,"message":"192","line":8,"column":3,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"148","severity":1,"message":"193","line":9,"column":3,"nodeType":"150","messageId":"151","endLine":9,"endColumn":19},{"ruleId":"148","severity":1,"message":"194","line":10,"column":3,"nodeType":"150","messageId":"151","endLine":10,"endColumn":14},{"ruleId":"148","severity":1,"message":"195","line":11,"column":3,"nodeType":"150","messageId":"151","endLine":11,"endColumn":18},{"ruleId":"148","severity":1,"message":"196","line":38,"column":10,"nodeType":"150","messageId":"151","endLine":38,"endColumn":16},{"ruleId":"148","severity":1,"message":"197","line":38,"column":6,"nodeType":"150","messageId":"151","endLine":38,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":256,"column":38,"nodeType":"167","messageId":"168","endLine":256,"endColumn":40},{"ruleId":"148","severity":1,"message":"156","line":5,"column":3,"nodeType":"150","messageId":"151","endLine":5,"endColumn":15},{"ruleId":"148","severity":1,"message":"157","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":12},{"ruleId":"148","severity":1,"message":"158","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":29},{"ruleId":"148","severity":1,"message":"198","line":12,"column":3,"nodeType":"150","messageId":"151","endLine":12,"endColumn":19},{"ruleId":"148","severity":1,"message":"199","line":15,"column":3,"nodeType":"150","messageId":"151","endLine":15,"endColumn":31},{"ruleId":"148","severity":1,"message":"200","line":16,"column":3,"nodeType":"150","messageId":"151","endLine":16,"endColumn":26},{"ruleId":"148","severity":1,"message":"159","line":20,"column":22,"nodeType":"150","messageId":"151","endLine":20,"endColumn":30},{"ruleId":"148","severity":1,"message":"201","line":21,"column":10,"nodeType":"150","messageId":"151","endLine":21,"endColumn":27},{"ruleId":"148","severity":1,"message":"160","line":22,"column":10,"nodeType":"150","messageId":"151","endLine":22,"endColumn":23},{"ruleId":"148","severity":1,"message":"202","line":23,"column":10,"nodeType":"150","messageId":"151","endLine":23,"endColumn":13},{"ruleId":"148","severity":1,"message":"153","line":23,"column":15,"nodeType":"150","messageId":"151","endLine":23,"endColumn":18},{"ruleId":"148","severity":1,"message":"161","line":26,"column":11,"nodeType":"150","messageId":"151","endLine":26,"endColumn":15},{"ruleId":"148","severity":1,"message":"162","line":31,"column":8,"nodeType":"150","messageId":"151","endLine":31,"endColumn":12},{"ruleId":"148","severity":1,"message":"163","line":31,"column":14,"nodeType":"150","messageId":"151","endLine":31,"endColumn":21},{"ruleId":"185","severity":1,"message":"203","line":39,"column":6,"nodeType":"187","endLine":39,"endColumn":8,"suggestions":"204"},{"ruleId":"148","severity":1,"message":"164","line":4,"column":31,"nodeType":"150","messageId":"151","endLine":4,"endColumn":40},{"ruleId":"148","severity":1,"message":"205","line":5,"column":18,"nodeType":"150","messageId":"151","endLine":5,"endColumn":22},{"ruleId":"148","severity":1,"message":"190","line":5,"column":41,"nodeType":"150","messageId":"151","endLine":5,"endColumn":46},{"ruleId":"148","severity":1,"message":"206","line":8,"column":13,"nodeType":"150","messageId":"151","endLine":8,"endColumn":17},{"ruleId":"148","severity":1,"message":"207","line":35,"column":8,"nodeType":"150","messageId":"151","endLine":35,"endColumn":20},{"ruleId":"148","severity":1,"message":"190","line":3,"column":41,"nodeType":"150","messageId":"151","endLine":3,"endColumn":46},{"ruleId":"148","severity":1,"message":"206","line":13,"column":13,"nodeType":"150","messageId":"151","endLine":13,"endColumn":17},{"ruleId":"165","severity":1,"message":"166","line":152,"column":54,"nodeType":"167","messageId":"168","endLine":152,"endColumn":56},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Row' is defined but never used.",["208"],["209"],"'DateCallback' is defined but never used.","'MonthView' is defined but never used.","'RouteComponentProps' is defined but never used.","'WiSunset' is defined but never used.","'JsxExpression' is defined but never used.","'User' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'useParams' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setDateString' is assigned a value but never used.","'setTimeSlotInfos' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["208"],["209"],"'Form' is defined but never used.","'useHistory' is defined but never used.","'H' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FC' is defined but never used.","'ReactNode' is defined but never used.","'Props' is defined but never used.","'ToggleButton' is defined but never used.","'IconButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'Button' is defined but never used.","'Image' is defined but never used.","'TimeRange' is defined but never used.","'GetDateCaledar' is defined but never used.","'DateReservedInfo' is defined but never used.","'PostReserve' is defined but never used.","'SuccessResponse' is defined but never used.","'isEble' is defined but never used.","'ReserveRequest' is defined but never used.","'CalendarResponse' is defined but never used.","'UserReservationCountResponse' is defined but never used.","'GetUserReservationCount' is defined but never used.","'MdDoNotDisturbAlt' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["211"],"'Card' is defined but never used.","'util' is defined but never used.","'reservations' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [props.history]",{"range":"216","text":"217"},"Update the dependencies array to be: [history]",{"range":"218","text":"219"},[771,773],"[props.history]",[1185,1187],"[history]"]